name: tests

on:
  workflow_call:

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-go@v3"
      - name: Check go fmt has been applied
        working-directory: ./guts
        run: |
          #!/bin/bash
          files=$(gofmt -l .) && [ -z "$files" ]
      - name: Install postgres
        run: "sudo apt-get install -y postgresql"
      - name: Copy sql files to tmp directory and test applying them
        run: |
          #!/bin/bash
          set -ex
          sudo sh -c 'echo "local   all             all                                trust\nhost all all      ::1/128      md5\nhost all postgres 127.0.0.1/32 md5\n" | tee /etc/postgresql/16/main/pg_hba.conf'
          # start the db instance
          sudo systemctl start postgresql.service
          # bootstrap the database
          ./postgres/scripts/bootstrap-db.sh local no
          # dump the database
          # --restrict-key is required because of https://www.postgresql.org/docs/current/release-17-6.html
          sudo -i -u postgres pg_dump --restrict-key="asdf" guts >> dbdump_i_0.sql
          # re-run the bootstrap of the database
          ./postgres/scripts/bootstrap-db.sh local
          # dump the database again
          sudo -i -u postgres pg_dump --restrict-key="asdf" guts >> dbdump_i_1.sql
          diff dbdump_i_0.sql dbdump_i_1.sql
          # compare the two dumps, ensure the second bootstrap
          # run didn't change the database configuration
          [[ $(sha256sum dbdump_i_0.sql | cut -d" " -f1) == $(sha256sum dbdump_i_1.sql | cut -d" " -f1) ]];
      - name: Set /srv/ permissions
        run: |
          #!/bin/bash
          sudo chown $USER:$USER -R /srv/
      - name: Run tests + test coverage
        run: |
          #!/bin/bash
          set -ex
          sudo apt-get install -y qemu-system-x86 qemu-utils
          export GOBIN="$(pwd)/gobin"
          mkdir -p "$GOBIN"
          export PATH="${PATH}:${GOBIN}"
          go install github.com/vladopajic/go-test-coverage/v2@latest
          ./scripts/run-tests.bash
